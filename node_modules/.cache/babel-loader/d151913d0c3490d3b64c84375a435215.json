{"ast":null,"code":"var _jsxFileName = \"/Users/kich555/Desktop/Development/Wecode/react-exercises/src/Lectures/Pagination/Users.js\";\nimport React, { Component } from 'react';\nimport Buttons from './Components/Buttons';\nimport CardList from './Components/CardList/CardList';\nimport './Users.scss';\n/**********************************************************\n  \n  현재 https://node-pagnation.herokuapp.com/users 에서 전체 데이터를 받아오고 있습니다\n  하지만 데이터가 너무 많네요! 20개 씩 끊어서 보여주면 좋겠습니다.\n  offset, limit 개념을 활용하여 페이지네이션을 구현해주세요.\n  \n  - 백엔드에서 offset 과 limit 이라는 \"키값\"을 통해 데이터를 끊어서 보내줄 준비가 되어있습니다. \n  - 쿼리스트링을 사용해 limit와, offset을 바꿔가며 요청을 보내보세요.\n\n  - 선택된 페이지의 버튼은 Buttons.scss에 준비된,\n    selected 클래스명을 활용해 현재 페이지와 일치할 경우 스타일링 될 수 있도록 해주세요.\n\n***********************************************************/\n\nclass Users extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: []\n    };\n  }\n\n  // 데이터 로딩\n  componentDidMount() {\n    fetch('https://node-pagnation.herokuapp.com/users').then(res => res.json()).then(res => this.setState({\n      users: res.users\n    }));\n  }\n\n  render() {\n    const {\n      users\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Photos\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, \"Mini Project - Pagination\"), /*#__PURE__*/React.createElement(Buttons, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CardList, {\n      users: users,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Users;","map":{"version":3,"sources":["/Users/kich555/Desktop/Development/Wecode/react-exercises/src/Lectures/Pagination/Users.js"],"names":["React","Component","Buttons","CardList","Users","state","users","componentDidMount","fetch","then","res","json","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAO,cAAP;AAEA;;;;;;;;;;;;;;AAcA,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BI,KAD4B,GACpB;AACNC,MAAAA,KAAK,EAAE;AADD,KADoB;AAAA;;AAK5B;AACAC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESC,GAAD,IAAS,KAAKE,QAAL,CAAc;AAAEN,MAAAA,KAAK,EAAEI,GAAG,CAACJ;AAAb,KAAd,CAFjB;AAGD;;AAEDO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,eAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAOD;;AAtB2B;;AAyB9B,eAAeF,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport Buttons from './Components/Buttons';\nimport CardList from './Components/CardList/CardList';\nimport './Users.scss';\n\n/**********************************************************\n  \n  현재 https://node-pagnation.herokuapp.com/users 에서 전체 데이터를 받아오고 있습니다\n  하지만 데이터가 너무 많네요! 20개 씩 끊어서 보여주면 좋겠습니다.\n  offset, limit 개념을 활용하여 페이지네이션을 구현해주세요.\n  \n  - 백엔드에서 offset 과 limit 이라는 \"키값\"을 통해 데이터를 끊어서 보내줄 준비가 되어있습니다. \n  - 쿼리스트링을 사용해 limit와, offset을 바꿔가며 요청을 보내보세요.\n\n  - 선택된 페이지의 버튼은 Buttons.scss에 준비된,\n    selected 클래스명을 활용해 현재 페이지와 일치할 경우 스타일링 될 수 있도록 해주세요.\n\n***********************************************************/\n\nclass Users extends Component {\n  state = {\n    users: [],\n  };\n\n  // 데이터 로딩\n  componentDidMount() {\n    fetch('https://node-pagnation.herokuapp.com/users')\n      .then((res) => res.json())\n      .then((res) => this.setState({ users: res.users }));\n  }\n\n  render() {\n    const { users } = this.state;\n\n    return (\n      <div className=\"Photos\">\n        <h1>Mini Project - Pagination</h1>\n        <Buttons />\n        <CardList users={users} />\n      </div>\n    );\n  }\n}\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}